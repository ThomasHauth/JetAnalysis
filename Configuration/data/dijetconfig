# this is just an example, could go in some example dir
# it is not generic and will probably not run
# artus -c
# works
from Artus.Configuration.ArtusConfigBase import ArtusBaseConfig

def config():
	conf = ArtusTestConfig('data', '2012', )
	conf.set_exec_name('JetAna')
	conf.set_input_filenames("/afs/desy.de/user/g/gsieber/dijetana/ana/CMSSW_6_2_7/kappa*")
	conf.set_output_filename("output.root")
    conf.expand()
	return conf.get_config()


class JetConfig(ArtusBaseConfig):

	def __init__(self, inputtype='mc', run='2012'):
		super(ArtusTestConfig, self).__init__(inputtype)
		self._run = run


	def expand(self):
		if self._inputtype == 'data':
			self.set_data_specific()
		elif self._inputtype == 'mc':
			self.set_mc_specific()
		else:
			raise ValueError("The inputtype must be either 'data' or 'mc'.")

	def set_mc_specific(self):
		"""Add mc specific settings to a config
		"""
		pass

	def set_data_specific(self):
		"""Add data specific settings to a config
		"""
		pass


# vim: set ft=python:
